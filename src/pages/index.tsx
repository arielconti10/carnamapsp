import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const blocos = api.bloco.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <h1 className="mt-4 text-5xl font-extrabold tracking-tight text-white sm:text-[4rem]">
          Blocos de rua Carnaval SP{" "}
          <span className="text-[hsl(280,100%,70%)]">2023</span>
        </h1>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 max-w-3xl w-full ">
          <div className="flex flex-col items-center gap-4 w-full">
            <fieldset className="flex flex-col w-full justify-center">
              <legend className="text-white ml-2 mb-2">Pesquise o nome bloco</legend>
              <input type="text" className="bg-white/10 w-full rounded-full px-4 py-2 text-white" placeholder="Ex: A praça é nossa" />
            </fieldset>
            <fieldset className="flex flex-col w-full justify-center">
              <legend className="text-white ml-2 mb-2">Data do bloco</legend>
              <input type="date" className="bg-white/10 rounded-full px-4 py-2 text-white" placeholder="Data" />
            </fieldset>
          </div>
          <div className="flex flex-col items-center gap-2 w-full">
            {blocos.data
              ? blocos.data.map((bloco) => (
                  <div
                    className="flex w-full flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                    key={bloco.id}
                  >
                    <h1>{bloco.name}</h1>
                    <p>{bloco.route}</p>
                  </div>
                ))
              : "Carregando..."}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
